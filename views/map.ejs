<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */

    #map {
      height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */

    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
    }
  </style>
</head>

<body>
  <div id="map"></div>
  <script>
    var map;
    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        zoom: 2,
        center: new google.maps.LatLng(2.8, -187.3),
        mapTypeId: 'roadmap',
        minZoom: 6,
        maxZoom: 15
      });

      // Create a <script> tag and set the USGS URL as the source.
      //var script = document.createElement('script');
      // This example uses a local copy of the GeoJSON stored at
      // http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojsonp
      //script.src = 'https://developers.google.com/maps/documentation/javascript/examples/json/earthquake_GeoJSONP.js';
      //document.getElementsByTagName('head')[0].appendChild(script);

      //REST call for this data will be from http://localhost:3000/map/geojson
      //for now, hard-code the results that will come from above
      eqfeed_callback ({
        "type": "FeatureCollection",
        "features": [
          {
            "type": "Feature",
            "geometry": {
              "type": "Point",
              "coordinates": [
                -74.20796039999999,
                40.8377986
              ]
            },
            "properties": {
              "name": "My Location",
              "category": "User",
              "street": "Valley Rd"
            }
          }
        ]
      })
    }


      // Loop through the results array and place a marker for each
      // set of coordinates.
      window.eqfeed_callback = function(results) {
        var bounds = new google.maps.LatLngBounds();

        for (var i = 0; i < results.features.length; i++) {
          var coords = results.features[i].geometry.coordinates;
          var latLng = new google.maps.LatLng(coords[1],coords[0]);
          var marker = new google.maps.Marker({
            position: latLng,
            map: map
          });
          bounds.extend(marker.getPosition());
        }

        map.fitBounds(bounds);
      }
  </script>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBUonXcsBfuuR-wtqvHuI_Ojfl95as0NMk&callback=initMap">

  </script>
</body>

</html>